import tkinter as tk
from tkinter import messagebox

def encrypt_caesar(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            is_upper = char.isupper()
            char = char.lower()
            shifted_index = (ord(char) - ord('a') + shift) % 26
            shifted_char = chr(ord('a') + shifted_index)
            if is_upper:
                shifted_char = shifted_char.upper()
            encrypted_text += shifted_char
        else:
            encrypted_text += char
    return encrypted_text

def decrypt_caesar(encrypted_text, shift):
    return encrypt_caesar(encrypted_text, -shift)

def perform_operation():
    text = entry_text.get()
    shift_input = entry_shift.get()

    if not text:
        messagebox.showerror("Error", "Please enter text.")
        return

    if not shift_input:
        messagebox.showerror("Error", "Please enter a shift value.")
        return

    try:
        shift = int(shift_input)
        if 1 <= shift <= 25:
            operation = operation_var.get()
            if operation == "Encode":
                result.set(encrypt_caesar(text, shift))
            elif operation == "Decode":
                result.set(decrypt_caesar(text, shift))
        else:
            messagebox.showerror("Error", "Shift value must be between 1 and 25.")
    except ValueError:
        messagebox.showerror("Error", "Invalid shift value. Please enter a number.")

root = tk.Tk()
root.geometry("350x200")
root.title("Encode or Decode a text")

tk.Label(root, text="Enter text:").pack()
entry_text = tk.Entry(root)
entry_text.pack()

tk.Label(root, text="Enter shift value (1-25):").pack()
entry_shift = tk.Entry(root)
entry_shift.pack()

operation_var = tk.StringVar()
operation_var.set("Encode")
tk.Label(root, text="Select operation:").pack()
tk.Radiobutton(root, text="Encode", variable=operation_var, value="Encode").pack()
tk.Radiobutton(root, text="Decode", variable=operation_var, value="Decode").pack()

tk.Button(root, text="Perform Operation", command=perform_operation).pack()

result = tk.StringVar()
result_label = tk.Label(root, textvariable=result)
result_label.pack()

root.mainloop()
